{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-home-runner-work-russellwzr-github-io-russellwzr-github-io-content-blog-20230625-react-component-library-index-mdx-3e0aaa868c717fc06f5d.js","mappings":"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","sources":["webpack://russellwzr-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/after1.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/after2.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/prev.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/select1.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/select2.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/select3.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/storybook1.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/storybook2.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/storybook3.jpg","webpack://russellwzr-blog/./content/blog/20230625_ReactComponentLibrary/index.mdx","webpack://russellwzr-blog/./src/templates/blog-post.js","webpack://russellwzr-blog/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["import _defineProperty from \"/home/runner/work/Russellwzr.github.io/Russellwzr.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react';\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport var MDXContext = React.createContext({});\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n\n/** @type {Components} */\nvar emptyObject = {};\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n    children = _ref.children,\n    disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","export default __webpack_public_path__ + \"static/after1-c362a67836df6e0e646f283cbe868741.jpg\";","export default __webpack_public_path__ + \"static/after2-3ba0be7e835a39cc9000e908cf6646d7.jpg\";","export default __webpack_public_path__ + \"static/prev-fdd871671d34e035951f70c452cd1236.jpg\";","export default __webpack_public_path__ + \"static/select1-7922ec939aeaddf20eabb078b7b7f741.jpg\";","export default __webpack_public_path__ + \"static/select2-c038640f92fe860d12599dd8007e9c87.jpg\";","export default __webpack_public_path__ + \"static/select3-23d126bf4383ed2a412fe093d083834b.jpg\";","export default __webpack_public_path__ + \"static/storybook1-c9f04ac5d0b8667df34331d220f2acb4.jpg\";","export default __webpack_public_path__ + \"static/storybook2-648afc434a9c229cab08e8957a33229b.jpg\";","export default __webpack_public_path__ + \"static/storybook3-9334fba08c48bf6c4b5e2c9f420900a4.jpg\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport after1 from './after1.jpg';\nimport after2 from './after2.jpg';\nimport prev from './prev.jpg';\nimport select1 from './select1.jpg';\nimport select2 from './select2.jpg';\nimport select3 from './select3.jpg';\nimport storybook1 from './storybook1.jpg';\nimport storybook2 from './storybook2.jpg';\nimport storybook3 from './storybook3.jpg';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    div: \"div\",\n    h4: \"h4\",\n    ul: \"ul\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"项目地址：https://github.com/Russellwzr/russell-react-ui\"), \"\\n\", React.createElement(_components.h2, null, \"整体流程\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"项目结构和代码规范\"), \"\\n\", React.createElement(_components.li, null, \"样式解决方案\"), \"\\n\", React.createElement(_components.li, null, \"组件需求分析及实现\"), \"\\n\", React.createElement(_components.li, null, \"测试用例分析及实现\"), \"\\n\", React.createElement(_components.li, null, \"组件库自动文档生成\"), \"\\n\", React.createElement(_components.li, null, \"npm 打包发布及文档网站部署\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"一、项目结构和代码规范\"), \"\\n\", React.createElement(_components.h3, null, \"文件结构设置\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">russell-react-ui/\\n  .github/\\n  .husky/\\n  .storybook/\\n  .prettierrc\\n  node_modules/\\n  README.md\\n  package.json\\n  package-lock.json\\n  tsconfig.json\\n  tsconfig.build.json\\n  src/\\n    hooks/\\n      ......\\n    components/\\n      Button/\\n        button.tsx\\n        button.test.tsx\\n        button.stories.tsx\\n        style.scss\\n      ......\\n    styles/\\n      _variables.scss (各种变量以及可配置设置)\\n      _mixins.scss (全局 mixins)\\n      _reboot.scss (normalize.css)\\n      _functions.scss (全局 functions)\\n    index.tsx</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"代码规范配置\"), \"\\n\", React.createElement(_components.h4, null, \"ESLint\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  \\\"eslintConfig\\\": {\\n    \\\"extends\\\": [\\n      \\\"react-app\\\",\\n      \\\"react-app/jest\\\"\\n    ],\\n    \\\"plugins\\\": [\\n      \\\"react-hooks\\\"\\n    ],\\n    \\\"rules\\\": {\\n      \\\"react-hooks/rules-of-hooks\\\": \\\"error\\\",\\n      \\\"react-hooks/exhaustive-deps\\\": \\\"warn\\\"\\n    }\\n  }</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"Prettier\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  {\\n    \\\"singleQuote\\\": true,\\n    \\\"trailingComma\\\": \\\"all\\\",\\n    \\\"printWidth\\\": 120,\\n    \\\"bracketSpacing\\\": true,\\n    \\\"semi\\\": false,\\n    \\\"tabWidth\\\": 2,\\n    \\\"jsxSingleQuote\\\": false,\\n    \\\"overrides\\\": [\\n      {\\n        \\\"files\\\": \\\".prettierrc\\\",\\n        \\\"options\\\": { \\\"parser\\\": \\\"json\\\" }\\n      }\\n    ],\\n    \\\"endOfLine\\\": \\\"auto\\\"\\n  }</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"Husky\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  npm install husky --save-dev\\n\\n  // 开启 git hooks\\n  npx husky install\\n  npm pkg set scripts.prepare=\\\"husky install\\\"\\n\\n  // 设置每次git commit前自动运行组件测试以及eslint代码检查\\n  npx husky add .husky/pre-commit \\\"npm run test:nowatch &amp;&amp; npm run lint\\\"\\n  git add .husky/pre-commit</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"二、样式解决方案\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"选取了 SCSS 作为样式解决方案\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"样式解决方案分析可见之前文章：\", React.createElement(_components.a, {\n    href: \"https://russellwzr.github.io/blog/20230606_ReactStyles/\"\n  }, \"React 项目样式解决方案杂谈\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"样式相关文件结构\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">styles/\\n  _variables.scss (各种变量以及可配置设置)\\n  _mixins.scss (全局 mixins)\\n  _functions.scss (全局 functions)\\n  _reboot.scss (normalize.css)\\ncomponents/\\n  Button/\\n    style.scss (组件单独的样式)\\n    ...</code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"色彩系统\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"系统色板：基础色板 + 中性色板\"), \"\\n\", React.createElement(_components.li, null, \"产品色板：品牌色板 + 功能色板\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"字体系统（设置 font-family, font-size, font-weight …）\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"添加 normalize.css（修改为 _reboot.scss 并融合 _variables.scss 里的变量设置）\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"三、组件需求分析及实现\"), \"\\n\", React.createElement(_components.p, null, \"该部分选取了 Form 以及 Select 组件进行记录，只介绍主要的分析与设计流程，具体实现可参见仓库源码。\"), \"\\n\", React.createElement(_components.h3, null, \"Form Component\"), \"\\n\", React.createElement(_components.h4, null, \"1. 主体功能分析\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"默认设置：支持在表单顶层设置各个表单元素的默认值，以方便提示及重置\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"灵活渲染：既可以自行决定子元素节点的选取，还可以结合表单状态定制渲染结果\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"规则验证：支持自定义规则、多项规则校验、自定义验证时机、表单整体验证\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"实例获取：用户可以直接获取表单的状态及方法来更加方便地实现复杂的业务需求\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"2. 组件结构设计\"), \"\\n\", React.createElement(_components.p, null, \"采取 Form+FormItem 的层级结构，以灵活支持 UI 自定义（ant-design, arco-design 等组件库都使用了该方式）\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Form</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormItem</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Username<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Input</span></span> <span class=\\\"token attr-name\\\">placeholder</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>please enter your username...<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FormItem</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormItem</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Post<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Input</span></span> <span class=\\\"token attr-name\\\">placeholder</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>please enter your post...<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FormItem</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormItem</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Checkbox</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">I have read the manual</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Checkbox</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FormItem</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormItem</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Button</span></span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>primary<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Submit</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Button</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FormItem</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Form</span></span><span class=\\\"token punctuation\\\">></span></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"结合上述功能需求，两个组件的属性设计如下：\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">/**\\n * Form Component\\n */</span>\\n<span class=\\\"token comment\\\">/** Custom Rendering */</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">RenderProps</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>form<span class=\\\"token operator\\\">:</span> FormState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> ReactNode\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">FormProps</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/** Prefix of the form field */</span>\\n  name<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  <span class=\\\"token comment\\\">/** Default values for initialization and reset */</span>\\n  initialValues<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token comment\\\">/** Callback function after the form is submitted and the data validation is successful */</span>\\n  onFinish<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>values<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span>\\n  <span class=\\\"token comment\\\">/** Callback function after the form is submitted and the data validation fails */</span>\\n  onFinishFailed<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>values<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> errors<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> ValidateError<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">void</span>\\n  children<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ReactNode <span class=\\\"token operator\\\">|</span> RenderProps\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">/**\\n * FormItem Component\\n */</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">FormItemProps</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/** Field name */</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  <span class=\\\"token comment\\\">/** Label content */</span>\\n  label<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  <span class=\\\"token comment\\\">/** Attribute of the value of the child node, e.g. 'type=checkbox' is 'checked' */</span>\\n  valuePropName<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  <span class=\\\"token comment\\\">/** Set how to trigger value changes, e.g. onChange */</span>\\n  trigger<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  <span class=\\\"token comment\\\">/** Set how to get field value from event, e.g. e.target.value */</span>\\n  getValueFromEvent<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token builtin\\\">any</span>\\n  <span class=\\\"token comment\\\">/** Validation rules (see async-validator for more details) */</span>\\n  rules<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> CustomRule<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token comment\\\">/** Set the timing of field validation */</span>\\n  validateTrigger<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  children<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ReactNode\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"3. 组件状态管理\"), \"\\n\", React.createElement(_components.p, null, \"由上述分析可以看出，需求中的部分功能，如“表单整体验证”，需要 Form 组件结合 FormItem 组件的相关状态进行处理，而这两种组件之间存在着层级关系且 Form 采用 children 的方式渲染 FormItem，状态传递的实现较为复杂，因此这里采用 Context 来将两种组件的状态进行共享，并借助 useReducer 来实现状态更新。\"), \"\\n\", React.createElement(_components.p, null, \"共享状态属性设置：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"表单整体状态 FormState，包含表单是否合法、是否提交以及规则验证返回的错误信息\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">FormState</span> <span class=\\\"token punctuation\\\">{</span>\\n  isValid<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span>\\n  isSubmitting<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span>\\n  errors<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> ValidateError<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"表单元素状态 FieldDetail，包含名称、值、自定义规则、是否合法以及规则验证返回的错误信息\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">FieldDetail</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  value<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  rules<span class=\\\"token operator\\\">:</span> CustomRule<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n  isValid<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span>\\n  errors<span class=\\\"token operator\\\">:</span> ValidateError<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">FieldsState</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> FieldDetail\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"状态更新相关 action：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"addField 添加表单元素，updateValue 更新表单元素，updateValidateResult 更新校验结果\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">FieldsAction</span> <span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'addField'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'updateValue'</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token string\\\">'updateValidateResult'</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span>\\n  value<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">fieldsReducer</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token operator\\\">:</span> FieldsState<span class=\\\"token punctuation\\\">,</span> action<span class=\\\"token operator\\\">:</span> FieldsAction<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> FieldsState <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>action<span class=\\\"token punctuation\\\">.</span>type<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'addField'</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">[</span>action<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>action<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'updateValue'</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">[</span>action<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">[</span>action<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">:</span> action<span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token string\\\">'updateValidateResult'</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> isValid<span class=\\\"token punctuation\\\">,</span> errors <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> action<span class=\\\"token punctuation\\\">.</span>value\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">[</span>action<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>state<span class=\\\"token punctuation\\\">[</span>action<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> isValid<span class=\\\"token punctuation\\\">,</span> errors <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span>\\n      <span class=\\\"token keyword\\\">return</span> state\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"4. 组件功能实现\"), \"\\n\", React.createElement(_components.p, null, \"这里只贴了部分流程逻辑，具体实现可参见仓库源码\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"初始化 Store\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// form.tsx</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">,</span> initialValues<span class=\\\"token punctuation\\\">,</span> onFinish<span class=\\\"token punctuation\\\">,</span> onFinishFailed<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> props\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">,</span> fields<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>restProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useStore</span><span class=\\\"token punctuation\\\">(</span>initialValues<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> validateField<span class=\\\"token punctuation\\\">,</span> validateAllFields <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> restProps\\n<span class=\\\"token keyword\\\">const</span> passedContext<span class=\\\"token operator\\\">:</span> IFormContext <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  dispatch<span class=\\\"token punctuation\\\">,</span>\\n  fields<span class=\\\"token punctuation\\\">,</span>\\n  validateField<span class=\\\"token punctuation\\\">,</span>\\n  initialValues<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"结合表单状态定制表单元素渲染\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">let</span> childrenNode<span class=\\\"token operator\\\">:</span> ReactNode\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> children <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  childrenNode <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">children</span><span class=\\\"token punctuation\\\">(</span>form<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  childrenNode <span class=\\\"token operator\\\">=</span> children\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>form</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>form<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onSubmit</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>submitForm<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormContext.Provider</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>passedContext<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>childrenNode<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FormContext.Provider</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>form</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"创建表单元素：获取初始值，触发 addField 操作，并借助 React.cloneElement 实现组件元素自定义设置的注入\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// formItem.tsx</span>\\n\\n<span class=\\\"token comment\\\">/** Initialize the form content */</span>\\n<span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> value <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>initialValues <span class=\\\"token operator\\\">&amp;&amp;</span> initialValues<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">''</span>\\n  <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'addField'</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> label<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">,</span> rules<span class=\\\"token operator\\\">:</span> rules <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> errors<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> isValid<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">/** Add the custom attributes to FormItem */</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onValueUpdate</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> value <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getValueFromEvent</span><span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'updateValue'</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> value <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onValueValidate</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">validateField</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> controlProps<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\ncontrolProps<span class=\\\"token punctuation\\\">[</span>valuePropName<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> value\\ncontrolProps<span class=\\\"token punctuation\\\">[</span>trigger<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> onValueUpdate\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>rules<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  controlProps<span class=\\\"token punctuation\\\">[</span>validateTrigger<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> onValueValidate\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> childList <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span>Children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toArray</span><span class=\\\"token punctuation\\\">(</span>children<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>childList<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'No child element found in Form.Item, please provide one form component'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>childList<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token builtin\\\">console</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">warn</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Only support one child element in Form.Item, others will be omitted'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">isValidElement</span><span class=\\\"token punctuation\\\">(</span>childList<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Child component is not a valid React Element'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> child <span class=\\\"token operator\\\">=</span> childList<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token keyword\\\">as</span> React<span class=\\\"token punctuation\\\">.</span>ReactElement\\n<span class=\\\"token keyword\\\">const</span> customChildNode <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">cloneElement</span><span class=\\\"token punctuation\\\">(</span>child<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>child<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>controlProps <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"自定义规则及规则验证\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">transfromRules</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>rules<span class=\\\"token operator\\\">:</span> CustomRule<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> rules<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>rule<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">typeof</span> rule <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'function'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> calledRule <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">rule</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> getFieldValue <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">return</span> calledRule\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> rule\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">validateField</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> value<span class=\\\"token punctuation\\\">,</span> rules <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> fields<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token keyword\\\">const</span> afterRules <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">transfromRules</span><span class=\\\"token punctuation\\\">(</span>rules<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> descriptor <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> afterRules<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> valueMap <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> value<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> validator <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Schema</span><span class=\\\"token punctuation\\\">(</span>descriptor<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">let</span> isValid <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token keyword\\\">let</span> errors<span class=\\\"token operator\\\">:</span> ValidateError<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">await</span> validator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span>valueMap<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    isValid <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n    errors <span class=\\\"token operator\\\">=</span> e<span class=\\\"token punctuation\\\">.</span>errors\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'updateValidateResult'</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> isValid<span class=\\\"token punctuation\\\">,</span> errors <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">validateAllFields</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> isValid <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token keyword\\\">let</span> errors<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">,</span> ValidateError<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> valueMap <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">mapValues</span><span class=\\\"token punctuation\\\">(</span>fields<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> item<span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> descriptor <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">mapValues</span><span class=\\\"token punctuation\\\">(</span>fields<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token function\\\">transfromRules</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>rules<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> validator <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Schema</span><span class=\\\"token punctuation\\\">(</span>descriptor<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">setForm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>form<span class=\\\"token punctuation\\\">,</span> isSubmitting<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">await</span> validator<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">validate</span><span class=\\\"token punctuation\\\">(</span>valueMap<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    isValid <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span>\\n    <span class=\\\"token keyword\\\">const</span> err <span class=\\\"token operator\\\">=</span> e <span class=\\\"token keyword\\\">as</span> ValidateErrorType\\n    errors <span class=\\\"token operator\\\">=</span> err<span class=\\\"token punctuation\\\">.</span>fields\\n    <span class=\\\"token function\\\">each</span><span class=\\\"token punctuation\\\">(</span>fields<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>errors<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> itemErrors <span class=\\\"token operator\\\">=</span> errors<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'updateValidateResult'</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> isValid<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> errors<span class=\\\"token operator\\\">:</span> itemErrors <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">.</span>rules<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">!</span>errors<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'updateValidateResult'</span><span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> isValid<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span> errors<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setForm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>form<span class=\\\"token punctuation\\\">,</span> isSubmitting<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> isValid<span class=\\\"token punctuation\\\">,</span> errors <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      isValid<span class=\\\"token punctuation\\\">,</span>\\n      errors<span class=\\\"token punctuation\\\">,</span>\\n      values<span class=\\\"token operator\\\">:</span> valueMap<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"forwardRef + useImperativeHandle 暴露实例方法\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> Form <span class=\\\"token operator\\\">=</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">forwardRef</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>IFormRef<span class=\\\"token punctuation\\\">,</span> FormProps<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">,</span> ref<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">,</span> fields<span class=\\\"token punctuation\\\">,</span> dispatch<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>restProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useStore</span><span class=\\\"token punctuation\\\">(</span>initialValues<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token operator\\\">...</span><span class=\\\"token operator\\\">...</span>\\n  <span class=\\\"token operator\\\">...</span><span class=\\\"token operator\\\">...</span>\\n  <span class=\\\"token operator\\\">...</span><span class=\\\"token operator\\\">...</span>\\n  <span class=\\\"token comment\\\">// forwardRef + useImperativeHandle to expose instance methods</span>\\n  <span class=\\\"token function\\\">useImperativeHandle</span><span class=\\\"token punctuation\\\">(</span>ref<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token operator\\\">...</span>restProps<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token operator\\\">...</span><span class=\\\"token operator\\\">...</span>\\n  <span class=\\\"token operator\\\">...</span><span class=\\\"token operator\\\">...</span>\\n  <span class=\\\"token operator\\\">...</span><span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Select Component\"), \"\\n\", React.createElement(_components.p, null, \"Select 组件的需求比较简单，即支持选项的自定义以及单选多选等，提及它只是为了强调在开发过程中一定要注意边缘 case，这里以多选框为例，当选项过长或者选择的选项过多时，就会出现下面这种情况：\"), \"\\n\", React.createElement(\"img\", {\n    src: select1,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"选项过长导致 tag 框溢出，选择的选项过多导致 tag 框溢出了选择框，上述问题可以通过实时获取 tag 框的高度并对多选框的高度进行动态更新以及溢出样式调整来解决，效果如下：\"), \"\\n\", React.createElement(\"img\", {\n    src: select2,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"此外，有些情况下，用户选择的选项会特别多，为了防止 tag 框的无限增高对页面整体布局的影响，这里额外设置了一个自定义选项，让用户来控制选择框中所显示的标签数，效果如下：\"), \"\\n\", React.createElement(\"img\", {\n    src: select3,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"四、测试用例分析及实现\"), \"\\n\", React.createElement(_components.p, null, \"使用 Jest + React Testing Library 进行测试，通过 Jest 提供的测试运行环境和断言库以及 React Testing Library 在 react-dom 和 react-dom/test-utils 之上提供的轻量级函数，可以实现更加接近用户使用方式的测试流程。\"), \"\\n\", React.createElement(_components.p, null, \"这里以 Select 组件的一个测试用例为例，进行介绍，整个测试流程如下：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"获取选择框对应的 dom 元素，然后触发点击事件显示所有选项\"), \"\\n\", React.createElement(_components.li, null, \"获取所有选项对应的 dom 元素，然后依次触发点击事件，选中选项\"), \"\\n\", React.createElement(_components.li, null, \"检查 tag-items 的数目以及额外选中的选项数是否符合预期\"), \"\\n\", React.createElement(_components.li, null, \"…\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"由此可以看出，整个测试流程其实就是通过程序来模拟测试人员的手动测试，以自动化的方式提高测试的效率与准确度。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Max Tag setting in multiple mode should works fine'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Select</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>multipleProps<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">maxTagCount</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>id1<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>first<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>id2<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>second<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>id3<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>third<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>id4<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>fourth<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Select</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> inputEle <span class=\\\"token operator\\\">=</span> screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByPlaceholderText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'test'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> HTMLInputElement\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>inputEle<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> firstItem <span class=\\\"token operator\\\">=</span> screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'first'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> secondItem <span class=\\\"token operator\\\">=</span> screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'second'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> thirdItem <span class=\\\"token operator\\\">=</span> screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'third'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">const</span> fourthItem <span class=\\\"token operator\\\">=</span> screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fourth'</span><span class=\\\"token punctuation\\\">)</span>\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>firstItem<span class=\\\"token punctuation\\\">)</span>\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>secondItem<span class=\\\"token punctuation\\\">)</span>\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>thirdItem<span class=\\\"token punctuation\\\">)</span>\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>fourthItem<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAllByTestId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'tag-items'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'+ 2 ...'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBeInTheDocument</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>fourthItem<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAllByTestId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'tag-items'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getByText</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'+ 1 ...'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBeInTheDocument</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  fireEvent<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>thirdItem<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>screen<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAllByTestId</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'tag-items'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Jest 使用注意：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Jest 运行在 Node.js 环境上，遵循 CommonJS 规范，使用一些第三方库时，需要将导入导出模块从 ES Module 规范转为 CommonJS 规范，而 Jest 默认忽略/node_modules/目录的转换，因此需要我们手动把引用报错的模块在 transformIgnorePatterns 里排除掉，当然一些库比如 axios 额外提供了 CommonJS 规范的代码，我们也可以通过直接设置 moduleNameMapper 来解决。\"), \"\\n\", React.createElement(_components.li, null, \"https://stackoverflow.com/questions/73958968/cannot-use-import-statement-outside-a-module-with-axios\"), \"\\n\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  \\\"jest\\\": {\\n    \\\"transformIgnorePatterns\\\": [\\n      \\\"&lt;rootDir>/node_modules/(?!lodash-es)\\\"\\n    ],\\n    \\\"moduleNameMapper\\\": {\\n      \\\"axios\\\": \\\"axios/dist/node/axios.cjs\\\"\\n    }\\n  },</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"五、组件库自动文档生成\"), \"\\n\", React.createElement(_components.p, null, \"借助 Storybook + JSDoc 注释 + TypeScript 类型提示来实现组件库的自动文档生成，具体的安装及配置官方文档说的比较详细，这里只以 Select 组件为例，来介绍下 Storybook 的使用：\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token punctuation\\\">{</span> Meta<span class=\\\"token punctuation\\\">,</span> StoryObj <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@storybook/react'</span>\\n<span class=\\\"token keyword\\\">import</span> Select <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'.'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Option <span class=\\\"token operator\\\">=</span> Select<span class=\\\"token punctuation\\\">.</span>Option\\n\\n<span class=\\\"token keyword\\\">const</span> meta <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Select'</span><span class=\\\"token punctuation\\\">,</span>\\n  component<span class=\\\"token operator\\\">:</span> Select<span class=\\\"token punctuation\\\">,</span>\\n  tags<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'autodocs'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  decorators<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">(</span>Story<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> display<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'flex'</span><span class=\\\"token punctuation\\\">,</span> justifyContent<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'center'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> width<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'400px'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Story</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span> satisfies Meta<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">typeof</span> Select<span class=\\\"token operator\\\">></span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> meta\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">Story</span> <span class=\\\"token operator\\\">=</span> StoryObj<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">typeof</span> meta<span class=\\\"token operator\\\">></span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> BasicSelect<span class=\\\"token operator\\\">:</span> Story <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  args<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    defaultValue<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'second option'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function-variable function\\\">render</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Select</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>args<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>first option<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>second option<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>third option<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">disabled</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Option</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>fourth option<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Select</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"以上代码会生成一个基础 Select 框的交互式文档，文档首页会展示组件属性相关的描述、类型、默认值等，Controls 面板支持用户交互式更改组件属性，Actions 面板会记录用户交互所触发的组件事件。\"), \"\\n\", React.createElement(\"img\", {\n    src: storybook1,\n    style: {\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(\"img\", {\n    src: storybook2,\n    style: {\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(\"img\", {\n    src: storybook3,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"六、npm 打包发布及文档网站 CI/CD\"), \"\\n\", React.createElement(_components.p, null, \"首先对依赖项进行精简，将只在开发环境下需要的依赖库移动到 devDependencies 中，减少安装我们 npm 包时所连带的依赖库：\"), \"\\n\", React.createElement(\"img\", {\n    src: prev,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(\"img\", {\n    src: after1,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(\"img\", {\n    src: after2,\n    style: {\n      zoom: '67%',\n      margin: '0 auto'\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"然后设置构建选项，其中，样式文件的编译使用 node-sass，TypeScript 的构建时编译选项设置如下：\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">// tsconfig.build.json\\n{\\n  \\\"compilerOptions\\\": {\\n    \\\"outDir\\\": \\\"dist\\\",\\n    \\\"module\\\": \\\"esnext\\\",\\n    \\\"target\\\": \\\"es5\\\",\\n    \\\"declaration\\\": true,\\n    \\\"jsx\\\": \\\"react\\\",\\n    \\\"moduleResolution\\\": \\\"node\\\",\\n    \\\"allowSyntheticDefaultImports\\\": true\\n  },\\n  \\\"include\\\": [\\n    \\\"src\\\"\\n  ],\\n  \\\"exclude\\\": [\\n    \\\"src/**/*.test.tsx\\\",\\n    \\\"src/**/*.stories.tsx\\\",\\n  ]\\n}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"npm 包相关信息配置：\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  // package.json\\n  \\\"name\\\": \\\"russell-react-ui\\\",\\n  \\\"version\\\": \\\"0.1.2\\\",\\n  \\\"private\\\": false,\\n  \\\"description\\\": \\\"A Toy React Components Library Built by TypeScript and Sass\\\",\\n  \\\"author\\\": \\\"Russellwzr\\\",\\n  \\\"license\\\": \\\"MIT\\\",\\n  \\\"keywords\\\": [\\n    \\\"Component\\\",\\n    \\\"UI\\\",\\n    \\\"React\\\"\\n  ],\\n  \\\"homepage\\\": \\\"https://github.com/Russellwzr/russell-react-ui\\\",\\n  \\\"repository\\\": {\\n    \\\"type\\\": \\\"git\\\",\\n    \\\"url\\\": \\\"https://github.com/Russellwzr/russell-react-ui\\\"\\n  },\\n  \\\"files\\\": [\\n    \\\"dist\\\"\\n  ],\\n  \\\"main\\\": \\\"dist/index.js\\\",\\n  \\\"module\\\": \\\"dist/index.js\\\",\\n  \\\"types\\\": \\\"dist/index.d.ts\\\",</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"与发布相关的脚本设置如下，然后登录 npm 账号，直接运行 npm publish 即可。\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  // package.json\\n  \\\"scripts\\\": {\\n    \\\"clean\\\": \\\"rimraf ./dist\\\",\\n    \\\"lint\\\": \\\"eslint --ext js,ts,tsx src\\\",\\n    \\\"build\\\": \\\"npm run clean &amp;&amp; npm run build-ts &amp;&amp; npm run build-css\\\",\\n    \\\"test:nowatch\\\": \\\"cross-env CI=true react-scripts test\\\",\\n    \\\"build-ts\\\": \\\"tsc -p tsconfig.build.json\\\",\\n    \\\"build-css\\\": \\\"node-sass ./src/styles/index.scss ./dist/index.css\\\",\\n    \\\"prepublishOnly\\\": \\\"npm run lint &amp;&amp; npm run test:nowatch &amp;&amp; npm run build\\\",\\n  },</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"最后使用 Github Pages 部署文档网站，借助 Github Actions 实现 CI/CD，相关工作流的配置如下：\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">name: Build and Deploy Storybook Docs\\non:\\n  push:\\n    branches:\\n      - main\\njobs:\\n  build-and-deploy:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout 🛎️\\n        uses: actions/checkout@v2\\n\\n      - name: Install and Build 🔧\\n        run: |\\n          npm install\\n          npm run build-storybook\\n\\n      - name: Deploy 🚀\\n        uses: JamesIves/github-pages-deploy-action@releases/v3\\n        with:\\n          ACCESS_TOKEN: ${{ secrets.RUSSELL_REACT_UI }}\\n          BRANCH: gh-pages\\n          FOLDER: storybook-static</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"其中，secrets.RUSSELL_REACT_UI 在 Repository secrets 中设置，从 Developer Settings/Personal access tokens 中生成，最后再设置下对应仓库的 workflow 权限即可。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/Russellwzr.github.io/Russellwzr.github.io/content/blog/20230625_ReactComponentLibrary/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {Layout} from '../components/layout';\nimport {Seo} from '../components/common';\nconst BlogPostTemplate = ({data: {mdx: post}, children}) => {\n  return React.createElement(Layout, null, React.createElement(\"article\", {\n    className: \"mt-12 prose max-w-none dark:prose-invert\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), children));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nexport const pageQuery = graphql`\n  query BlogPostTemplate($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tag\n        title\n      }\n      fields {\n        timeToRead {\n          minutes\n          time\n          words\n        }\n      }\n    }\n  }\n`;\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","assign","p","h2","ol","li","h3","div","h4","ul","a","_provideComponents","React","dangerouslySetInnerHTML","__html","href","src","select1","style","zoom","margin","select2","select3","storybook1","storybook2","storybook3","prev","after1","after2","MDXLayout","wrapper","BlogPostTemplate","post","data","mdx","children","Layout","className","itemScope","itemType","itemProp","frontmatter","title","date","Head","Seo","description","excerpt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","_defineProperty","obj","value","configurable","writable"],"sourceRoot":""}