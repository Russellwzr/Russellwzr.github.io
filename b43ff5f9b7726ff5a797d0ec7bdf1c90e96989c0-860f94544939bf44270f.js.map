{"version":3,"file":"b43ff5f9b7726ff5a797d0ec7bdf1c90e96989c0-860f94544939bf44270f.js","mappings":"8OAEO,IAGMA,GAAaC,EAAAA,EAAAA,IAAG,uBAHE,OAKI,mEAJL,UAUI,09CAwBrBC,GAAS,unCAqBTC,GAAe,qMAEfC,GAAY,mgCAkBZC,GAAY,47D,29IC1DzB,EAde,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAChB,OACE,yBACE,iBACA,QAAC,KAAM,CAACC,OAAQP,KAChB,QAAC,EAAM,OACP,gBAAMQ,GAAG,OAAOC,UAAU,WAAWC,UAAW,GAC7CJ,IAEH,QAAC,EAAM,MAGb,E,qBCde,SAASK,IACtB,OAA6BC,EAAAA,EAAAA,KAArBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAOhB,OACE,QAACT,EAAY,CAACU,QAAQ,WACpB,iBACEC,KAAK,WACLR,GAAG,SACH,aAAW,qCACXS,QAASJ,EACTK,SAZN,SAAsBC,GACpB,IAAMC,EAAWD,EAAEE,OAAOJ,QAAU,OAAS,QAC7CH,EAASM,EACX,IAWKP,EAAS,YAAc,cACxB,qBAGN,CCpBA,IA2BA,EA3Be,WACb,IAAMS,EAAU,CACdC,KAAM,GACNC,KAAM,IAER,GAAsB,oBAAXC,OAAwB,CACjC,IAAMC,EAAUD,OAAOE,SAASC,UAC5BF,aAAO,EAAPA,EAASG,SAAU,IAAGP,EAAQC,KAAO,YACR,IAA7BG,EAAQI,QAAQ,WAAgBR,EAAQE,KAAO,WACrD,CAEA,OACE,QAACrB,EAAY,MACX,QAACD,EAAS,CAAC,aAAW,oBACpB,QAAC,EAAA6B,KAAI,CAACC,GAAG,IAAIvB,UAAU,UACvB,QAAC,EAAAsB,KAAI,CAACC,GAAG,IAAIvB,UAAWa,EAAQC,MAAK,SAGrC,QAAC,EAAAQ,KAAI,CAACC,GAAG,QAAQvB,UAAWa,EAAQE,MAAK,WAI3C,QAACb,EAAW,MAGlB,E,WCHA,EAvBe,WACb,OACE,QAACP,EAAY,MACX,aAAGK,UAAU,SAAO,uBACpB,QAAC,KAAU,OACX,aAAGA,UAAU,UAAQ,uDAGrB,aAAGA,UAAU,UAAQ,SACZ,KACP,aACEwB,KAAK,oEACLZ,OAAO,SACPa,IAAI,uBAAqB,mBAGtB,IAAG,oBAKhB,C,g6BCvBA,IA+BA,EA/B0B,SAAAC,GACxB,IAoBMC,GApBSC,EAAAA,EAAAA,gBAAe,cAoBTC,OAAOC,MAC5B,MAAgB,QAAZJ,EAA0BC,EACvBA,EAAMI,QAAO,SAAAC,GAClB,QAA2C,EAA3C,IAAuBA,EAAKC,YAAYC,OAAG,aAAE,CAAC,IAArCC,EAAU,QACjB,GAAIT,IAAYS,EAAY,OAAO,CACrC,CACA,OAAO,CACT,GACF,E,sBChBA,EAZiB,WACf,OAA4BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA/BC,EAAK,EAALA,MAAOjC,EAAQ,EAARA,SAETD,GAASmC,EAAAA,EAAAA,UAAQ,iBAAgB,SAAVD,CAAgB,GAAE,CAACA,IAMhD,MAAO,CAAEA,MAAAA,EAAOjC,SAAAA,EAAUD,OAAAA,EAAQoC,YAJlC,WACEnC,EAASD,EAAS,QAAU,OAC9B,EAGF,C","sources":["webpack://russellwzr-blog/./src/components/layout/styles.js","webpack://russellwzr-blog/./src/components/layout/Layout.js","webpack://russellwzr-blog/./src/components/layout/ThemeToggle.js","webpack://russellwzr-blog/./src/components/layout/Header.js","webpack://russellwzr-blog/./src/components/layout/Footer.js","webpack://russellwzr-blog/./src/hooks/useFetchBlogPosts.js","webpack://russellwzr-blog/./src/hooks/useTheme.js"],"sourcesContent":["import tw, { css, theme, styled } from 'twin.macro'\n\nexport const LightBackground = theme`colors.white`\nexport const DarkBackground = theme`colors.gray.700`\n\nexport const baseStyles = css`\n  .light {\n    --bg-primary: ${LightBackground};\n    --text-primary: ${theme`colors.gray.600`};\n    --text-dark: ${theme`colors.gray.700`};\n  }\n\n  .dark {\n    --bg-primary: ${DarkBackground};\n    --text-primary: ${theme`colors.purple.50`};\n  }\n\n  body {\n    ${tw`font-serif bg-primary text-primary before:(block w-full)`};\n    &::before {\n      ${tw`h-1 bg-gradient-to-r from-purple-800 via-yellow-400 to-turquoise`};\n    }\n\n    #___gatsby {\n      ${tw`max-w-5xl min-h-screen mx-auto px-2 lg:px-0`};\n    }\n\n    a {\n      ${tw`focus:(outline-none) focus-visible:(outline-none ring-2 ring-purple-300)`};\n    }\n\n    #skip-link {\n      ${tw`sr-only focus:(not-sr-only fixed left-1 top-1.5 bg-primary)`};\n    }\n  }\n`\n\nexport const StyledNav = styled.nav`\n  ${tw`flex justify-self-end gap-x-2 text-center place-items-center`};\n\n  .logo {\n    ${tw`flex items-center py-2 justify-self-start md:justify-center`};\n    svg {\n      ${tw`block w-10 h-12 md:(w-14 h-16)`};\n    }\n  }\n\n  a:not(.logo) {\n    ${tw`flex items-center p-3 motion-safe:transition duration-200 tracking-wide border-b-2 border-transparent md:(ml-0 px-10 text-xl) hover:text-yellow-500`};\n\n    &.add-line,\n    &[aria-current='page'],\n    &:hover {\n      ${tw`border-yellow-500`};\n    }\n  }\n`\n\nexport const StyledHeader = tw.header`grid grid-template-columns[1fr minmax(min-content, max-content)] gap-x-2 md:gap-x-4`\n\nexport const StyledFooter = styled.footer`\n  ${tw`grid py-6 text-3xl border-t-2 mt-10 place-items-center gap-y-2`};\n\n  .title {\n    ${tw`grid grid-flow-col text-lg font-semibold text-transparent gap-x-2 place-items-center bg-clip-text bg-gradient-to-r from-purple-500 to-yellow-500`};\n\n    svg {\n      ${tw`inline-block w-8 h-10 md:(w-10 h-12)`};\n    }\n  }\n  .author {\n    ${tw`text-sm font-light`};\n    a {\n      ${tw`tracking-wider border-b-2 border-yellow-500 hover:text-yellow-500`};\n    }\n  }\n`\n\nexport const StyledToggle = styled.label`\n  ${tw`inline-grid self-center grid-template-areas[\"input label\"] grid-template-columns[2.5rem auto] gap-1 items-center md:text-lg hover:cursor-pointer`};\n  input,\n  span {\n    ${tw`grid-area[input] h-3 w-8 md:text-base`};\n  }\n  input {\n    ${tw`opacity-0`};\n  }\n  span {\n    ${tw`items-center bg-indigo-500 inline-grid opacity-80 rounded-2xl`};\n    &::before {\n      ${tw`w-4 h-4 transform transition-all -translate-y-0.5 duration-200 bg-white border-2 border-indigo-500 rounded-full content`};\n    }\n  }\n  input:checked + span::before {\n    ${tw`translate-x-4 bg-gray-800`};\n  }\n  input:focus-visible + span::before {\n    ${tw`ring-2 ring-indigo-800`};\n  }\n  input:checked:focus-visible + span::before {\n    ${tw`ring-2 ring-white`};\n  }\n`\n","import React from \"react\"\nimport { GlobalStyles } from \"twin.macro\"\nimport { Global } from \"@emotion/react\"\nimport { baseStyles } from \"./styles\"\nimport { Header, Footer } from \"./\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <Global styles={baseStyles} />\n      <Header />\n      <main id=\"main\" className=\"relative\" tabIndex={-1}>\n        {children}\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { StyledToggle } from \"./styles\"\nimport { useTheme } from \"../../hooks\"\n\nexport default function ThemeToggle() {\n  const { isDark, setTheme } = useTheme()\n\n  function handleToggle(e) {\n    const newTheme = e.target.checked ? \"dark\" : \"light\"\n    setTheme(newTheme)\n  }\n\n  return (\n    <StyledToggle htmlFor=\"toggle\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle\"\n        aria-label=\"Switch between Dark and Light mode\"\n        checked={isDark}\n        onChange={handleToggle}\n      />\n      {isDark ? \"Dark Mode\" : \"Light Mode\"}\n      <span />\n    </StyledToggle>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { StyledNav, StyledHeader } from './styles'\nimport ThemeToggle from './ThemeToggle'\n\nconst Header = () => {\n  const addLine = {\n    home: '',\n    blog: '',\n  }\n  if (typeof window !== 'undefined') {\n    const pathLoc = window.location.pathname\n    if (pathLoc?.length <= 1) addLine.home = 'add-line'\n    if (pathLoc.indexOf('/blog') === 0) addLine.blog = 'add-line'\n  }\n\n  return (\n    <StyledHeader>\n      <StyledNav aria-label=\"Main Navigation\">\n        <Link to=\"/\" className=\"logo\"></Link>\n        <Link to=\"/\" className={addLine.home}>\n          Home\n        </Link>\n        <Link to=\"/blog\" className={addLine.blog}>\n          Blogs\n        </Link>\n      </StyledNav>\n      <ThemeToggle />\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport { SocialList } from \"../common\"\nimport { StyledFooter } from \"./styles\"\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <p className=\"title\">Keep eating codes!</p>\n      <SocialList />\n      <p className=\"author\">\n        Created by Gatsby & React & Tailwind CSS & Emotion\n      </p>\n      <p className=\"author\">\n        Thanks{\" \"}\n        <a\n          href=\"https://github.com/chrismwilliams/gatsby-emotion-tailwind-starter\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Chrism Williams\n        </a>{\" \"}\n        for the starter.\n      </p>\n    </StyledFooter>\n  )\n}\n\nexport default Footer\n","import { useStaticQuery, graphql } from \"gatsby\"\n\nconst useFetchBlogPosts = tagName => {\n  const result = useStaticQuery(\n    graphql`\n      query {\n        allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n          nodes {\n            excerpt\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              title\n              description\n              tag\n            }\n          }\n        }\n      }\n    `\n  )\n  const posts = result.allMdx.nodes\n  if (tagName === \"All\") return posts\n  return posts.filter(post => {\n    for (let curTagName of post.frontmatter.tag) {\n      if (tagName === curTagName) return true\n    }\n    return false\n  })\n}\n\nexport default useFetchBlogPosts\n","import { useContext, useMemo } from \"react\"\nimport { ThemeContext } from \"../context/theme\"\n\nconst useTheme = () => {\n  const { theme, setTheme } = useContext(ThemeContext)\n\n  const isDark = useMemo(() => theme === \"dark\", [theme])\n\n  function ToggleTheme() {\n    setTheme(isDark ? \"light\" : \"dark\")\n  }\n\n  return { theme, setTheme, isDark, ToggleTheme }\n}\n\nexport default useTheme\n"],"names":["baseStyles","css","StyledNav","StyledHeader","StyledFooter","StyledToggle","children","styles","id","className","tabIndex","ThemeToggle","useTheme","isDark","setTheme","htmlFor","type","checked","onChange","e","newTheme","target","addLine","home","blog","window","pathLoc","location","pathname","length","indexOf","Link","to","href","rel","tagName","posts","useStaticQuery","allMdx","nodes","filter","post","frontmatter","tag","curTagName","useContext","ThemeContext","theme","useMemo","ToggleTheme"],"sourceRoot":""}