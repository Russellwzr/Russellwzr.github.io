{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-home-runner-work-russellwzr-github-io-russellwzr-github-io-content-blog-20230411-colossal-ai-tech-index-mdx-f35ed63c25f04bc8d4d1.js","mappings":"kLACA,SAASA,EAAQC,EAAQC,GAAkB,IAAIC,EAAOC,OAAOD,KAAKF,GAAS,GAAIG,OAAOC,sBAAuB,CAAE,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAASC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UAAY,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAAU,CAAE,OAAOH,CAAM,CACpV,SAASU,EAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EAAGA,EAAI,EAAIf,EAAQI,OAAOc,IAAS,GAAIC,SAAQ,SAAUC,IAAO,OAAgBN,EAAQM,EAAKF,EAAOE,GAAO,IAAKhB,OAAOiB,0BAA4BjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAAWlB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GAAOhB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,GAAO,GAAI,CAAE,OAAON,CAAQ,CAiClf,IAAIU,EAAa,gBAAoB,CAAC,GAmCtC,SAASC,EAAiBC,GAC/B,IAAIC,EAAoB,aAAiBH,GAEzC,OAAO,WAAc,WAEnB,MAA0B,mBAAfE,EACFA,EAAWC,GAEbd,EAAcA,EAAc,CAAC,EAAGc,GAAoBD,EAC7D,GAAG,CAACC,EAAmBD,GACzB,C,+IC3EME,EAAmB,SAAH,GAAsC,IAArBC,EAAI,EAAhBC,KAAOC,IAAYC,EAAQ,EAARA,SAC5C,OAAOC,EAAAA,cAAoBC,EAAAA,GAAQ,KAAMD,EAAAA,cAAoB,UAAW,CACtEE,UAAW,2CACXC,WAAW,EACXC,SAAU,6BACTJ,EAAAA,cAAoB,SAAU,KAAMA,EAAAA,cAAoB,KAAM,CAC/DK,SAAU,YACTT,EAAKU,YAAYC,OAAQP,EAAAA,cAAoB,IAAK,KAAMJ,EAAKU,YAAYE,OAAQT,GACtF,EACaU,EAAO,SAAH,GAA4B,IAAXb,EAAI,EAAhBC,KAAOC,IAC3B,OAAOE,EAAAA,cAAoBU,EAAAA,GAAK,CAC9BH,MAAOX,EAAKU,YAAYC,MACxBI,YAAaf,EAAKU,YAAYK,aAAef,EAAKgB,SAEtD,EAqBe,SAASC,EAAiBC,GACvC,OAAOd,EAAAA,cAAoBL,EAAkBmB,EAAOd,EAAAA,cAAoBe,EAAAA,EAAqBD,GAC/F,C,wBC1CA,IAAe,IAA0B,mD,wBCAzC,IAAe,IAA0B,kD,wBCAzC,IAAe,IAA0B,0D,wBCAzC,IAAe,IAA0B,2D,wBCAzC,IAAe,IAA0B,2D,wBCAzC,IAAe,IAA0B,uD,wBCAzC,IAAe,IAA0B,gE,wBCAzC,IAAe,IAA0B,sE,wBCAzC,IAAe,IAA0B,6D,wBCAzC,IAAe,IAA0B,mE,uBCAzC,IAAe,IAA0B,uD,wBCAzC,IAAe,IAA0B,+D,wBCAzC,IAAe,IAA0B,mD,wBCAzC,IAAe,IAA0B,mD,wBCAzC,IAAe,IAA0B,mD,wBCA1B,G,wBCAf,IAAe,IAA0B,6D,wBCAzC,IAAe,IAA0B,gE,wBCAzC,IAAe,IAA0B,qD,wBCAzC,IAAe,IAA0B,4D,wBCAzC,IAAe,IAA0B,4D,wBCAzC,IAAe,IAA0B,4D,uBCA1B,SAASE,EAAgBC,EAAK9B,EAAK+B,GAYhD,OAXI/B,KAAO8B,EACT9C,OAAOmB,eAAe2B,EAAK9B,EAAK,CAC9B+B,MAAOA,EACPzC,YAAY,EACZ0C,cAAc,EACdC,UAAU,IAGZH,EAAI9B,GAAO+B,EAGND,CACT,C","sources":["webpack://russellwzr-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://russellwzr-blog/./src/templates/blog-post.js","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/GPipe.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/adam.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/architecture.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/data_parallel.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/data_transfer.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/gpu_links.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/memory_space_reuse.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/mixed_precision_training.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/mlp_1d_parallel.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/multi_tensor_parallel.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/pipedream.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/pipeline_parallel.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/rsa_1.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/rsa_2.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/rsa_3.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/tensor_3d.png","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/tensor_parallel.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/tensor_parallel_3d.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/zero_dp.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/zero_offload_1.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/zero_offload_2.jpg","webpack://russellwzr-blog/./content/blog/20230411_ColossalAITech/zero_offload_3.jpg","webpack://russellwzr-blog/./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"sourcesContent":["import _defineProperty from \"/home/runner/work/Russellwzr.github.io/Russellwzr.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react';\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport var MDXContext = React.createContext({});\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n\n/** @type {Components} */\nvar emptyObject = {};\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n    children = _ref.children,\n    disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","import GATSBY_COMPILED_MDX from \"/home/runner/work/Russellwzr.github.io/Russellwzr.github.io/content/blog/20230411_ColossalAITech/index.mdx\";\nimport * as React from 'react';\nimport {graphql} from 'gatsby';\nimport {Layout} from '../components/layout';\nimport {Seo} from '../components/common';\nconst BlogPostTemplate = ({data: {mdx: post}, children}) => {\n  return React.createElement(Layout, null, React.createElement(\"article\", {\n    className: \"mt-12 prose max-w-none dark:prose-invert\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date)), children));\n};\nexport const Head = ({data: {mdx: post}}) => {\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  });\n};\nexport const pageQuery = graphql`\n  query BlogPostTemplate($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tag\n        title\n      }\n      fields {\n        timeToRead {\n          minutes\n          time\n          words\n        }\n      }\n    }\n  }\n`;\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","export default __webpack_public_path__ + \"static/GPipe-b79866436be96ab78ca493d2158e9cc6.jpg\";","export default __webpack_public_path__ + \"static/adam-5cad0b183ea325d40e8a4d131852e05f.jpg\";","export default __webpack_public_path__ + \"static/architecture-eef0739f4fbc08d774541820bae459cd.jpg\";","export default __webpack_public_path__ + \"static/data_parallel-d76271c0ab4ba3c34cb747443cbc4a29.jpg\";","export default __webpack_public_path__ + \"static/data_transfer-fbd080c2666b8d05c9e60e382db05312.jpg\";","export default __webpack_public_path__ + \"static/gpu_links-bfdef7367a736e8065cf6eec17631ddb.jpg\";","export default __webpack_public_path__ + \"static/memory_space_reuse-120dd3db876f03f6e1eb0b5b2cd5089f.jpg\";","export default __webpack_public_path__ + \"static/mixed_precision_training-30b900a80689a4d5a1b29bd75761919e.jpg\";","export default __webpack_public_path__ + \"static/mlp_1d_parallel-069d5894f0f2faa15e9981550ca021db.jpg\";","export default __webpack_public_path__ + \"static/multi_tensor_parallel-8886ce3f23d253d7b192d8d2300980e5.jpg\";","export default __webpack_public_path__ + \"static/pipedream-50542699dfca9c8c5b816e34a22a9426.jpg\";","export default __webpack_public_path__ + \"static/pipeline_parallel-853d8d895f71f2f9e76405137a4e3736.jpg\";","export default __webpack_public_path__ + \"static/rsa_1-2e93cc43b17d16296ccc7f5a2e983fd2.jpg\";","export default __webpack_public_path__ + \"static/rsa_2-02b53dcb89db21f5d123d8f0b8bed163.jpg\";","export default __webpack_public_path__ + \"static/rsa_3-e7c87aeb8e6f867b1e9b97bef395aab7.jpg\";","export default __webpack_public_path__ + \"static/tensor_3d-cec1f26379fa4bbb6ae10ccec10a43ba.png\";","export default __webpack_public_path__ + \"static/tensor_parallel-171c45d4c6dc85656e29efd2bf3f4758.jpg\";","export default __webpack_public_path__ + \"static/tensor_parallel_3d-18e6d3edfddfedd754ab6d70ba894d8a.jpg\";","export default __webpack_public_path__ + \"static/zero_dp-7d4c398928b0e44b9d50430c1b0c3014.jpg\";","export default __webpack_public_path__ + \"static/zero_offload_1-e436bc037a7d0294e40773322a33daa3.jpg\";","export default __webpack_public_path__ + \"static/zero_offload_2-5e05f6a16aa042b0ee0c4f7d3395ee86.jpg\";","export default __webpack_public_path__ + \"static/zero_offload_3-048ba80553be69aa71657e538afb0296.jpg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","MDXContext","useMDXComponents","components","contextComponents","BlogPostTemplate","post","data","mdx","children","React","Layout","className","itemScope","itemType","itemProp","frontmatter","title","date","Head","Seo","description","excerpt","GatsbyMDXWrapper","props","GATSBY_COMPILED_MDX","_defineProperty","obj","value","configurable","writable"],"sourceRoot":""}